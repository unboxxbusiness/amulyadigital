rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can perform any action on any user document
      allow read, write: if isAdmin();

      // Users can only read or update their own document
      allow get, update: if isOwner(userId);
      
      // Prevent users from changing their own role, status, or memberId
      allow update: if isOwner(userId) && 
                      !('role' in request.resource.data) &&
                      !('status' in request.resource.data) &&
                      !('memberId' in request.resource.data) &&
                      !('lifetimeMembershipId' in request.resource.data);

      // Users can apply for lifetime membership by setting the status, but cannot approve it
      allow update: if isOwner(userId) && 
                      request.resource.data.lifetimeStatus == 'applied' &&
                      resource.data.lifetimeStatus != 'applied';

      // Users cannot create other user documents
      allow create: if false;
    }
    
    // Rules for the 'counters' collection
    match /counters/{counterId} {
      // Only admins (specifically, server-side functions with admin privileges) can read or write to counters
      allow read, write: if isAdmin();
      
      // Deny all client-side access
      allow read, write: if false;
    }
  }
}
