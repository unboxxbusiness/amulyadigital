rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or sub-admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'sub-admin'];
    }

    // Helper function to check if a user is a super-admin
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection rules
    match /users/{userId} {
      // Admins can read/write any user document
      allow read, write: if isAdmin();
      // Authenticated users can read and update their own document
      allow get, update: if request.auth.uid == userId;
      // Allow user creation during signup
      allow create: if request.auth.uid != null;
    }

    // Service Requests collection rules
    match /serviceRequests/{requestId} {
       // Admins can read and write all service requests
      allow read, write: if isAdmin();
      // Authenticated users can create requests
      allow create: if request.auth.uid != null;
      // Users can only read their own service requests
      allow list: if request.auth.uid != null && request.query.where[0][2] == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberId;
    }
    
    // Counters collection rules (for member IDs)
    match /counters/{counterId} {
       // Only super-admins can read and write counters
      allow read, write: if isSuperAdmin();
    }

    // Site Visits collection rules
    match /siteVisits/{visitId} {
      // Anyone can create a visit record to allow tracking
      allow create: if true;
      // Only admins can read the visit records
      allow read: if isAdmin();
    }
  }
}
