rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin or sub-admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'sub-admin'];
    }
    
    // Helper function to check if the user is a super-admin
    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is a member
    function isMember() {
        return request.auth.uid != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'active';
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read/write any user document
      // Users can only read/write their own document
      allow read, write: if isAdmin() || request.auth.uid == userId;
      // Allow creation for anyone (for sign-up)
      allow create: if request.auth.uid != null;
    }

    // Service Requests Collection
    match /serviceRequests/{requestId} {
      // Admins can read/write any request
      allow read, write: if isAdmin();
      // Members can create their own requests
      allow create: if isMember() && request.resource.data.uid == request.auth.uid;
      // Members can read their own requests
      allow read: if isMember() && resource.data.uid == request.auth.uid;
    }

    // Contact Submissions Collection
    match /contactSubmissions/{submissionId} {
      // Admins can read/write any submission
      allow read, write: if isAdmin();
      // Authenticated users can create submissions for themselves
      allow create: if request.auth.uid != null && request.resource.data.uid == request.auth.uid;
    }
    
    // Counters Collection (for member IDs)
    match /counters/{counterId} {
      // Only super admins can read/write counters
      allow read, write: if isSuperAdmin();
    }
    
    // Site Visits Collection
    match /siteVisits/{visitId} {
        // Only admins can read visit logs
        allow read: if isAdmin();
        // Any authenticated user can create a site visit log (happens on dashboard load)
        allow create: if request.auth.uid != null;
    }

  }
}
