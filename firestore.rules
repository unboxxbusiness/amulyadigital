rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin roles
    function isAdmin() {
      return request.auth.token.role == 'admin' || request.auth.token.role == 'sub-admin';
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own data, admins can read any user data
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;
    }

    // Service Requests:
    // Members can create requests for themselves.
    // Admins can read/update all requests.
    // Members can read their own requests.
    match /serviceRequests/{requestId} {
      allow create: if isOwner(resource.data.uid);
      allow read: if isOwner(get(/databases/$(database)/documents/serviceRequests/$(requestId)).data.uid) || isAdmin();
      allow update, delete: if isAdmin();
    }
    
    // Contact Submissions:
    // Any authenticated user can create a submission.
    // Only admins can read or delete them.
    match /contactSubmissions/{submissionId} {
        allow create: if request.auth != null;
        allow read, delete: if isAdmin();
    }
    
    // Site Visits: 
    // Anyone can create (log a visit).
    // Only admins can read the collection.
    match /siteVisits/{visitId} {
        allow create: if true;
        allow read: if isAdmin();
    }
    
    // Counters:
    // Only accessible by admins for read and write operations.
    match /counters/{counterId} {
        allow read, write: if isAdmin();
    }
  }
}