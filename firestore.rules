rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isSubAdmin() {
      return request.auth.token.role == 'sub-admin';
    }
    
    function isMember() {
      return request.auth.token.role == 'member';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      // Admins can read/write any user document
      // Users can read/update their own document
      allow read, update: if isAdmin() || isSubAdmin() || isOwner(userId);
      // Admins can create/delete users (handled by server actions)
      allow create, delete: if isAdmin();
    }
    
    match /serviceRequests/{requestId} {
        // Members can create requests for themselves
        allow create: if isMember() && request.resource.data.uid == request.auth.uid;
        // Members can read their own requests
        allow read: if isOwner(resource.data.uid);
        // Admins/Sub-admins can read/update/delete any request
        allow read, update, delete: if isAdmin() || isSubAdmin();
    }
    
    match /contactSubmissions/{submissionId} {
        // Members can create submissions
        allow create: if isMember() && request.resource.data.uid == request.auth.uid;
        // Admins/Sub-admins can read/delete any submission
        allow read, delete: if isAdmin() || isSubAdmin();
    }
    
    match /counters/{counterId} {
        // Only accessible by backend/admin functions
        allow read, write: if isAdmin();
    }

    match /siteVisits/{visitId} {
        // Only accessible by backend/admin functions
        allow create, read: if isAdmin();
    }
  }
}
